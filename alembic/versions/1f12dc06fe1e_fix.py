"""fix

Revision ID: 1f12dc06fe1e
Revises: 992c5f113503
Create Date: 2022-07-19 01:05:05.890087

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '1f12dc06fe1e'
down_revision = '992c5f113503'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('book',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_book_id'), 'book', ['id'], unique=False)
    op.create_table('genre',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_genre_id'), 'genre', ['id'], unique=False)
    op.create_table('status',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_status_id'), 'status', ['id'], unique=False)
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('nickname', sa.String(length=30), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('password', sa.String(length=256), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('photo', sa.String(length=255), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('confirmation', postgresql.UUID(as_uuid=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('nickname')
    )
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=False)
    op.create_table('comment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('text', sa.String(length=255), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('likes', sa.Integer(), nullable=True),
    sa.Column('fk_user', sa.Integer(), nullable=True),
    sa.Column('fk_book', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['fk_book'], ['book.id'], ),
    sa.ForeignKeyConstraint(['fk_user'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_comment_id'), 'comment', ['id'], unique=False)
    op.create_table('rate',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('text', sa.String(length=255), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('rate', sa.Integer(), nullable=True),
    sa.Column('likes', sa.Integer(), nullable=True),
    sa.Column('fk_user', sa.Integer(), nullable=True),
    sa.Column('fk_book', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['fk_book'], ['book.id'], ),
    sa.ForeignKeyConstraint(['fk_user'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_rate_id'), 'rate', ['id'], unique=False)
    op.create_table('user_book',
    sa.Column('fk_book', sa.Integer(), nullable=False),
    sa.Column('fk_user', sa.Integer(), nullable=False),
    sa.Column('fk_status', sa.Integer(), nullable=True),
    sa.Column('date', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['fk_book'], ['book.id'], ),
    sa.ForeignKeyConstraint(['fk_status'], ['status.id'], ),
    sa.ForeignKeyConstraint(['fk_user'], ['user.id'], ),
    sa.PrimaryKeyConstraint('fk_book', 'fk_user')
    )
    op.create_table('user_genre',
    sa.Column('fk_genre', sa.Integer(), nullable=False),
    sa.Column('fk_user', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['fk_genre'], ['genre.id'], ),
    sa.ForeignKeyConstraint(['fk_user'], ['user.id'], ),
    sa.PrimaryKeyConstraint('fk_genre', 'fk_user')
    )
    op.create_table('like',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('fk_comment', sa.Integer(), nullable=True),
    sa.Column('fk_rate', sa.Integer(), nullable=True),
    sa.Column('fk_user', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['fk_comment'], ['comment.id'], ),
    sa.ForeignKeyConstraint(['fk_rate'], ['rate.id'], ),
    sa.ForeignKeyConstraint(['fk_user'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_like_id'), 'like', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_like_id'), table_name='like')
    op.drop_table('like')
    op.drop_table('user_genre')
    op.drop_table('user_book')
    op.drop_index(op.f('ix_rate_id'), table_name='rate')
    op.drop_table('rate')
    op.drop_index(op.f('ix_comment_id'), table_name='comment')
    op.drop_table('comment')
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_status_id'), table_name='status')
    op.drop_table('status')
    op.drop_index(op.f('ix_genre_id'), table_name='genre')
    op.drop_table('genre')
    op.drop_index(op.f('ix_book_id'), table_name='book')
    op.drop_table('book')
    # ### end Alembic commands ###
